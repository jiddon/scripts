import csv
import numpy as np
import pandas as pd
import scipy.stats as stats
from functools import reduce
from datetime import datetime
import plotly.graph_objects as go
import matplotlib.pyplot as plt
import os

def p2f(x):
    return float(x.strip('%'))/100

def mu_round(x):
    base = 1
    return base * round(float(x)/base)

def hv_round(x):
    return round(float(x),2)

def get_rod_data(name, meas):
    df = pd.read_csv('./dcs_csv/'+name+'_'+meas+'.csv', names=["Day", meas], converters={meas:hv_round})
    return df

def read_csv_to_df(path):
    df = pd.read_csv(path, names=["time", "value"])
    return df

def get_dfs_from_paths(directory):
    df = pd.DataFrame()
    for n,filename in enumerate(os.listdir(directory)):
        p = os.path.join(directory, filename)
        if os.path.isfile(p):
            dfi = read_csv_to_df(p)
            dfi['mod'] = filename.replace("_PP4LV.csv", "")
            dfi_red = dfi[dfi['value'] > 1.8]
            #dfi_red['time'] = dfi_red['time'].apply(lambda x: datetime.strptime(x,'%Y-%m-%d %H:%M:%S'))
            df = df.append(dfi_red, ignore_index=True)
        else:
            msg = f"File {f} does not exist!"
            raise FileNotFoundError(msg)
    return df

def llines(df, x, value):
    """
    line plot as a function of x for all modules
    """
    _df = df.sort_values(by=x)
    mods = list(set(_df['mod'].to_list()))
    
    fig = go.Figure()
    for mod in mods:
        df = _df[_df['mod'] == mod]
        fig.add_trace(go.Scatter(x=df['time'], y=df[value],
                                 mode='lines+markers',
                                 name=mod))
    fig.write_html(value+".html")
    fig.show()

def lllines(df, value):
    """
    line plot as a function of x for all modules
    """
    df['time'] = pd.to_datetime(df['time'])
    daily = df.resample('3D', on='time').sum()

    daily.plot(y=value, use_index=True)
    plt.show()
    
        
if __name__=="__main__":
    df = get_dfs_from_paths('dcs_csv')
    lllines(df, 'value')
    
