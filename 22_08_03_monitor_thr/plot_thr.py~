import matplotlib.pyplot as plt
import matplotlib.dates
from datetime import datetime

def get_thr():
    """
    fill dict with thr on a given date
    upgrade to scrape https://elog-atlas-pixel.web.cern.ch/Detector/?Type=%5EMonitoring+Scan%24
    """
    thr = {
        datetime(2022,8,3): {"thr":1430, "thrstd":66, "tot":9.97, "totstd":0.24},
        datetime(2022,7,27): {"thr":1432, "thrstd":48, "tot":10.36, "totstd":0.14},
        datetime(2022,7,12): {"thr":1475, "thrstd":20, "tot":10.35, "totstd":0.06},
        datetime(2022,6,7): {"thr":1477, "thrstd":22, "tot":10.34, "totstd":0.05},
        datetime(2022,6,3): {"thr":1484, "thrstd":16, "tot":10.33, "totstd":0.04},
        datetime(2022,5,25): {"thr":1481, "thrstd":15, "tot":10.32, "totstd":0.04},
        datetime(2022,5,10): {"thr":1482, "thrstd":1, "tot":10.3, "totstd":0.01},
        datetime(2022,5,2): {"thr":1487, "thrstd":15, "tot":10.28, "totstd":0.04},
    }
    
        
    return thr

def plot(data, threshold):
    """
    plot measurable over time
    """
    if threshold:
        keyx = "thr"
        keyy = "thrstd"
    else:
        keyx = "tot"
        keyy = "totstd"
    x = []
    y = []
    yerr = []
    for k in thr.keys():
        x.append(k)
        y.append(thr[k][keyx])
        yerr.append(thr[k][keyy])
    fig, ax = plt.subplots()
    fig.set_size_inches(8, 6)
    plt.errorbar(x,y,yerr, fmt="xk", ecolor="r")
    ax.set_xlabel("Date of monitoring scan", fontsize=18)
    if threshold:
        ax.set_ylabel("Threshold ($e^{-}$)", fontsize=18)
    else:
        ax.set_ylabel("ToT (s)", fontsize=18)
    ax.tick_params(axis="both", labelsize=14)
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()

if __name__=="__main__":
    thr = get_thr()
    plot(thr, True)
    plot(thr, False)
